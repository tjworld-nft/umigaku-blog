---
import BaseLayout from '../layouts/BaseLayout.astro'
import { getPosts } from '../lib/sanityClient'
import { detectTags, extractTextFromPortableText, getPopularTags } from '../lib/autoTagger'
import { calculateReadingTimeFromPortableText, formatReadingTime } from '../lib/readingTime'
import type { Post } from '../types/Post'

let posts: Post[] = []
let error = ''

try {
  posts = await getPosts()
} catch (err) {
  error = '記事の取得に失敗しました'
  console.error('Error fetching posts:', err)
}

// 各記事にタグと読了時間を追加
const postsWithTags = posts.map(post => {
  const bodyText = extractTextFromPortableText(post.body || [])
  const autoTags = detectTags(post.title, bodyText)
  const readingTime = calculateReadingTimeFromPortableText(post.body || [])
  return { ...post, autoTags, readingTime }
})

// 人気タグの取得
const popularTags = getPopularTags(postsWithTags).slice(0, 8) // 上位8タグ

// 画像URLを生成する関数
function getImageUrl(imageRef: string, projectId: string, dataset: string) {
  return `https://cdn.sanity.io/images/${projectId}/${dataset}/${imageRef.replace('image-', '').replace('-jpg', '.jpg').replace('-png', '.png').replace('-webp', '.webp')}`
}

// 日付フォーマット関数
function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString('ja-JP')
}
---

<BaseLayout title="三浦 海の学校のブログ - 最新記事" description="三浦 海の学校のブログの最新記事をご覧ください。ダイビング、マリンアクティビティの情報を発信しています。">
  {error ? (
    <div class="text-center py-12">
      <p class="text-red-600 text-lg">{error}</p>
    </div>
  ) : posts.length === 0 ? (
    <div class="text-center py-12">
      <p class="text-gray-600 text-lg">まだ記事がありません</p>
    </div>
  ) : (
    <>
      <h1 class="text-3xl font-bold text-gray-900 mb-8">最新記事</h1>
      
      <!-- タグクラウド -->
      {popularTags.length > 0 && (
        <div class="mb-12 p-6 bg-white/80 backdrop-blur-md rounded-lg shadow-md">
          <h2 class="text-xl font-bold text-gray-900 mb-4">人気のタグ</h2>
          <div class="flex flex-wrap gap-3">
            {popularTags.map(({ tag, count, color }) => (
              <span
                class="inline-flex items-center gap-2 px-3 py-1 text-sm font-medium text-white rounded-full"
                style={`background-color: ${color}`}
              >
                {tag}
                <span class="text-xs bg-white/20 px-1.5 py-0.5 rounded-full">{count}</span>
              </span>
            ))}
          </div>
        </div>
      )}
      
      <!-- TODO: 20記事以上になったらページネーション実装 -->
      <div class="grid gap-10 sm:grid-cols-2 lg:grid-cols-3">
        {postsWithTags.map((post) => (
          <div class="max-w-3xl mx-auto">
            <article class="w-full bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
            {post.mainImage && (
              <div class="aspect-video bg-gray-200">
                <img
                  src={post.mainImage.asset.url}
                  alt={post.title}
                  class="w-full h-full object-cover rounded-t-lg"
                />
              </div>
            )}
            <div class="p-6">
              <h2 class="text-xl font-bold mb-2 line-clamp-2">
                <a
                  href={`/blog/${post.slug}/`}
                  class="text-gray-900 hover:text-blue-600 transition-colors"
                >
                  {post.title}
                </a>
              </h2>
              <div class="flex items-center gap-4 text-gray-600 text-sm mb-4">
                <time datetime={post.publishedAt || post._createdAt}>
                  {formatDate(post.publishedAt || post._createdAt)}
                </time>
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  {formatReadingTime(post.readingTime)}
                </span>
              </div>
              <a
                href={`/blog/${post.slug}/`}
                class="inline-block bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors"
              >
                続きを読む
              </a>
            </div>
            </article>
          </div>
        ))}
      </div>
    </>
  )}
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>